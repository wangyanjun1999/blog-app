// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String
  bio       String?
  avatar    String?
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

// 对多的时候，使用[]
  posts     Post[]
  comments  Comment[]
  likes     Like[]
}

model Post {
  id        Int      @id @default(autoincrement())
  slug      String?  @unique
  title     String
  content   String
  thumbnail String?
  published Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
//
  author   User @relation(fields: [authorId], references: [id])
  authorId Int
//
  comments Comment[]


  // 
  likes Like[]

// 多对多
  tags Tag[] @relation("PostTag")

}

model Comment {
  id      Int    @id @default(autoincrement())
  content String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
//
  post    Post   @relation(fields: [postId], references: [id])
  postId  Int
//
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
 
}


model Tag {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
//
  posts     Post[] @relation("PostTag")
}


model Like{
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
//
  post    Post   @relation(fields: [postId], references: [id])
  postId  Int
//
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
}